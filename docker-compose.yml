version: "3.8"

services:
  minio:
    image: minio/minio:latest
    container_name: pubapp-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - pubapp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    image: pubapp:${DOCKER_TAG:-latest}
    container_name: pubapp-nextjs
    ports:
      - "3055:3055"
    environment:
      NODE_ENV: production
      PORT: 3055
      DATABASE_URL: ${DATABASE_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your-super-secret-nextauth-key-change-in-production}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3055}
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET_NAME: pubapp-files
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - pubapp-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3055/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    volumes:
      - uploads_data:/app/uploads

  # Nginx reverse proxy (production)
  nginx:
    image: nginx:alpine
    container_name: pubapp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - nextjs
    networks:
      - pubapp-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  minio_data:
    driver: local
  uploads_data:
    driver: local

networks:
  pubapp-network:
    driver: bridge
